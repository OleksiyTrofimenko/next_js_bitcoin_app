{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/cegla/Projects/next-js-app/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport Layout from '../components/Layout';\nimport Prices from '../components/Prices';\n\nvar Index = function Index(_ref) {\n  var bpi = _ref.bpi;\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, \"BPI information\"), __jsx(Prices, {\n    bpiList: bpi,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }));\n}; // Get initial data for component\n\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios('https://api.coindesk.com/v1/bpi/historical/close.json');\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            bpi: res.data\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/cegla/Projects/next-js-app/pages/index.js"],"names":["axios","Layout","Prices","Index","bpi","getInitialProps","res","data"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,GAAH,QAAGA,GAAH;AAAA,SACZ,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADY;AAAA,CAAd,C,CAOA;;;KAPMD,K;AAQNA,KAAK,CAACE,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJL,KAAK,CACrB,uDADqB,CADD;;AAAA;AAChBM,UAAAA,GADgB;AAAA,2CAKf;AACLF,YAAAA,GAAG,EAAEE,GAAG,CAACC;AADJ,WALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAUA,eAAeJ,KAAf","sourcesContent":["import axios from 'axios';\nimport Layout from '../components/Layout';\nimport Prices from '../components/Prices';\n\nconst Index = ({ bpi }) => (\n  <Layout>\n    <h1>BPI information</h1>\n    <Prices bpiList={bpi} />\n  </Layout>\n);\n\n// Get initial data for component\nIndex.getInitialProps = async () => {\n  const res = await axios(\n    'https://api.coindesk.com/v1/bpi/historical/close.json'\n  );\n\n  return {\n    bpi: res.data,\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}